{"version":3,"sources":["Components/Links.js","Components/MainTitle.js","Components/Header.js","Components/JoyStick.js","Components/Canvas.js","Components/UnderlinedTitle.js","Components/MainSite.js","Components/Console.js","Components/SetUpSite.js","Components/Demonstration.js","Components/Footer.js","Pages/Landing.js","App.js","serviceWorker.js","index.js"],"names":["Links","title","className","href","MainTitle","annotation","Header","useState","displayMenu","setDisplayMenu","onClick","document","getElementById","style","display","id","Joystick","canvas","position","radius","callback","internalFillColor","internalStrokeColor","handleStart","e","pos","window","mobileCheck","changedTouches","Math","pow","pageX","innerCircle","x","offset","pageY","y","dragging","handleMovement","preventDefault","offsetX","offsetY","source","mx","my","angle","atan","outterCircle","cos","sign","sin","computeMovement","drawJoystick","handleReleased","movement","angleInDegrees","this","context","getContext","canvasBoundingRect","getBoundingClientRect","a","check","navigator","userAgent","vendor","opera","test","substr","addListeners","clearRect","width","height","beginPath","arc","PI","stroke","grd","createRadialGradient","addColorStop","fillStyle","fill","getPosition","addEventListener","oldDimensions","scrollY","parseInt","passive","proportionOfMovement","sqrt","degreeAngle","toFixed","Canvas","state","handleChange","props","onChange","canvasName","name","console","log","setState","joystick","JoyStick","Component","UnderlinedTitle","text","MainSite","Console","SetUpSite","target","Demonstration","setPosition","setAngle","data","Footer","Landing","App","basename","process","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b7a3ce4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Links = ({title}) => <p><a className=\"nav-links\" href={`#${title}`}> {title} </a></p>\r\n\r\nexport default Links","import React from 'react'\r\n\r\nconst MainTitle = ({title, annotation}) => {\r\n    return(\r\n        <div className=\"main-title\">\r\n            <h1 className=\"header-title\">{title}</h1>\r\n            <p>{annotation}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default MainTitle","import React, {useState} from 'react'\r\nimport Links from './Links'\r\nimport MainTitle from './MainTitle'\r\nimport './Styles/Header.css'\r\n\r\nconst Header = () => {\r\n\r\n    const [displayMenu, setDisplayMenu] = useState(false)\r\n\r\n    const displayNav = () => {\r\n        setDisplayMenu(!displayMenu)\r\n\r\n        if(displayMenu)\r\n            document.getElementById('navbar').style.display = 'block'\r\n        else\r\n            document.getElementById('navbar').style.display = 'none'\r\n\r\n    }\r\n\r\n    return (\r\n        <header className=\"site-header\">\r\n            <div className=\"larger-container\">\r\n                <button className=\"burger-button\" onClick={displayNav}>\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n                <nav id=\"navbar\" className=\"navigation-bar\">\r\n                    <Links title=\"start\" />\r\n                    <Links title=\"setup\" />\r\n                    <Links title=\"examples\" />\r\n                </nav>\r\n                <MainTitle title=\"JoyStick\" annotation=\"Easy to implement video game joystick\" />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","/**\r\n * ===============================\r\n *        Joystick Class\r\n * ===============================\r\n * \r\n * @constructor\r\n * \r\n * @param canvas {Object} - HTML canvas element where the joystick will be drawn\r\n * @param position {Object} - X and Y positions to draw the joystick\r\n * @param radius {Integer} - Radius of the outter circle -> inner will be drawn based on this value (60% of outter)\r\n * @param internalFillColor {String} (optional) - Internal color of inner circle\r\n * @param internalStrokeColor {String} (optional) - Border color of inner circle\r\n * \r\n */\r\n\r\nexport default class Joystick{\r\n    constructor(canvas, position, radius, callback,internalFillColor, internalStrokeColor){\r\n\r\n        /* Drawing canvas */\r\n        this.canvas = canvas\r\n        this.context = canvas.getContext(\"2d\")\r\n\r\n        let canvasBoundingRect = this.canvas.getBoundingClientRect()\r\n\r\n        this.offset = {\r\n            x: canvasBoundingRect.x,\r\n            y: canvasBoundingRect.y\r\n        }\r\n\r\n        /* Stablishing dimensions */\r\n        this.position = position\r\n        this.radius = radius\r\n\r\n        /* Outer circle */\r\n        this.outterCircle = {\r\n            x: this.position.x,\r\n            y: this.position.y,\r\n            radius: this.radius\r\n        }\r\n\r\n        /* Inner circle */\r\n        this.innerCircle = {\r\n            x: this.position.x,\r\n            y: this.position.y,\r\n            radius: this.radius * .60\r\n        }\r\n\r\n        /* Cos and sin */\r\n        this.movement = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n\r\n        /* Detect if mobile */\r\n        window.mobileCheck = function() {\r\n            let check = false;\r\n            (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n            return check;\r\n        };\r\n\r\n        this.angleInDegrees = 0\r\n\r\n        /* Dragging */\r\n        this.dragging = false\r\n\r\n        /* Color and Design */\r\n        this.internalFillColor = internalFillColor || \"#00AA00\"\r\n        this.internalStrokeColor = internalStrokeColor || \"#003300\"\r\n\r\n        /* Callback from parent component */\r\n        this.callback = callback\r\n\r\n        this.addListeners()\r\n        this.drawJoystick()\r\n    }\r\n\r\n    drawJoystick(){\r\n\r\n        /* Clear canvas before drawing */\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n\r\n        /* Draw outer circle */\r\n        this.context.beginPath()\r\n        this.context.arc(this.outterCircle.x, this.outterCircle.y, this.outterCircle.radius, 0, Math.PI * 2)\r\n        this.context.stroke()\r\n\r\n        /* Draw inner circle */\r\n        this.context.beginPath()\r\n        this.context.arc(this.innerCircle.x, this.innerCircle.y, this.innerCircle.radius, 0, Math.PI * 2)\r\n\r\n        /* Creating a gradient */\r\n        let grd = this.context.createRadialGradient(this.innerCircle.x, this.innerCircle.y, 5, this.innerCircle.x, this.innerCircle.y, 200)\r\n        grd.addColorStop(0, this.internalFillColor)\r\n        grd.addColorStop(1, this.internalStrokeColor)\r\n\r\n        /* Filling the circle */\r\n        this.context.fillStyle = grd;\r\n        this.context.fill()\r\n        this.context.stroke()\r\n\r\n        if(this.callback)\r\n            this.callback(this.getPosition())\r\n    }\r\n\r\n    /* Event listener to detect if the user is dragging */\r\n    addListeners(){\r\n\r\n        window.addEventListener('resize', () => {\r\n            let canvasBoundingRect = this.canvas.getBoundingClientRect()\r\n\r\n            let oldDimensions = {\r\n                width: this.canvas.width,\r\n                height: this.canvas.height\r\n            }\r\n\r\n            this.canvas.width = canvasBoundingRect.width\r\n            this.canvas.height = canvasBoundingRect.height\r\n\r\n            this.offset = {\r\n                x: canvasBoundingRect.x,\r\n                y: window.scrollY + parseInt(canvasBoundingRect.y)\r\n            }\r\n\r\n            this.position.x = this.canvas.width * this.innerCircle.x / oldDimensions.width\r\n            this.position.y = this.canvas.height * this.innerCircle.y / oldDimensions.height\r\n\r\n            this.innerCircle.x = this.position.x\r\n            this.innerCircle.y = this.position.y\r\n\r\n            this.outterCircle.x = this.position.x\r\n            this.outterCircle.y = this.position.y\r\n\r\n            this.drawJoystick()\r\n\r\n        })\r\n\r\n        window.addEventListener('scroll', (e) => {\r\n            let canvasBoundingRect = this.canvas.getBoundingClientRect()\r\n\r\n            this.offset = {\r\n                x: canvasBoundingRect.x,\r\n                y: window.scrollY + parseInt(canvasBoundingRect.y)\r\n            }\r\n\r\n        })\r\n\r\n        if(window.mobileCheck()){\r\n            window.addEventListener('touchstart', this.handleStart)\r\n            window.addEventListener('touchmove', this.handleMovement, {passive: false})\r\n            window.addEventListener('touchend', this.handleReleased)\r\n        }else{\r\n            window.addEventListener('mousedown', this.handleStart)\r\n            window.addEventListener('mouseup', this.handleReleased)\r\n            window.addEventListener('mousemove', this.handleMovement)\r\n        }  \r\n    }\r\n\r\n    /**\r\n     *  @desc Compute value of character movement based on position of inner circle\r\n     * \r\n     *  @param x - inner circle's X position with regards to outter circle => innerCircleX - outterCircleX\r\n     *  @param y - inner circle's Y position with regards to outter circle => OutterCircleY - innerCircleY\r\n     * \r\n     *  Note: As Y axis is inverted on a canvas, then we must substract from outterCircle\r\n     * \r\n     *  @returns - Object with the value of movement on X and Y\r\n     * */ \r\n    computeMovement(x, y, angle){\r\n\r\n        let movement = {x: 0, y: 0}\r\n\r\n        /* Calculate the proportion of the distance to be moved */\r\n        let hypotenuse = Math.sqrt(Math.pow(this.outterCircle.x - this.innerCircle.x, 2) + Math.pow(this.innerCircle.y - this.outterCircle.y, 2))\r\n\r\n        /* Get porcentage of movement regards to inner circle's radius */\r\n        let proportionOfMovement = hypotenuse * 100 / this.outterCircle.radius\r\n\r\n        let degreeAngle = angle * 180 / Math.PI\r\n\r\n        if( x >= 0 ){\r\n            if(y >= 0){\r\n                movement = {x: Math.cos(angle), y: Math.sin(angle)}\r\n                degreeAngle = -degreeAngle\r\n            }\r\n            else{\r\n                movement = {x: Math.cos(angle), y: Math.sin(angle)}\r\n                degreeAngle = 360 - degreeAngle\r\n            }\r\n        }else{\r\n            if(y >= 0) {\r\n                movement = {x: -Math.cos(angle), y: -Math.sin(angle)}\r\n                degreeAngle = 180 - degreeAngle\r\n            }\r\n            else{\r\n                movement = {x: -Math.cos(angle), y: -Math.sin(angle)}\r\n                degreeAngle -= 180\r\n                degreeAngle = -degreeAngle\r\n            }\r\n        }\r\n\r\n        /* apply proportion of movement */\r\n        movement.x *= proportionOfMovement/100\r\n        movement.y *= proportionOfMovement/100\r\n\r\n        /* TESTING */\r\n        //console.log(`${x}, ${y}, ${degreeAngle}`);\r\n\r\n        this.movement.x = movement.x\r\n        this.movement.y = movement.y \r\n        this.angleInDegrees = degreeAngle\r\n    }\r\n\r\n    /**\r\n     * ====================================\r\n     *      Get state of the Joystick\r\n     * ====================================\r\n     */\r\n\r\n    getPosition(){\r\n        return { \r\n            movement: {\r\n                x: this.movement.x.toFixed(3),\r\n                y: this.movement.y.toFixed(3)\r\n            },\r\n            angle: this.angleInDegrees.toFixed(3)\r\n        }\r\n           \r\n    }\r\n\r\n    /** \r\n     * ===============================\r\n     *      LISTENERS' CALLBACKS\r\n     * ===============================\r\n     * */ \r\n\r\n    handleStart = (e) => {\r\n        /* Determine if user is clicking the inner circle -> implemented using pythagoras */\r\n        let pos = (window.mobileCheck()) ? e.changedTouches[0] : e\r\n\r\n        if(Math.pow(pos.pageX - (this.innerCircle.x + this.offset.x), 2) + Math.pow(pos.pageY - (this.innerCircle.y + this.offset.y), 2) <= Math.pow(this.innerCircle.radius, 2))\r\n            this.dragging = true\r\n    }\r\n\r\n    /* When clicked then starts draggin */\r\n    handleMovement = (e) => {\r\n\r\n        /* if clicked */\r\n        if(this.dragging){\r\n            e.preventDefault()\r\n            let source = (window.mobileCheck()) ? e.changedTouches[0] : e\r\n            let mx = source.pageX\r\n            let my = source.pageY\r\n\r\n            let angle = Math.atan((my - (this.outterCircle.y + this.offset.y))/(mx - (this.outterCircle.x + this.offset.x)))\r\n\r\n            /* Move freely while in the outer circle */\r\n            if(Math.pow(mx - (this.outterCircle.x + this.offset.x), 2) + Math.pow(my - (this.outterCircle.y + this.offset.y), 2) <= Math.pow(this.outterCircle.radius, 2)){\r\n                this.innerCircle.x = mx - this.offset.x\r\n                this.innerCircle.y = my - this.offset.y\r\n            } else {\r\n\r\n                /* When the cursor is outside outer function then predict the position of inner circle\r\n                    using sin and cos */\r\n\r\n                let offsetX\r\n                let offsetY\r\n\r\n                if(mx < this.outterCircle.x + this.offset.x){\r\n                    offsetX = ((this.outterCircle.x + this.offset.x) - (this.radius * Math.cos(angle))) - mx\r\n                    this.innerCircle.x = (mx-this.offset.x) + offsetX\r\n                }else{\r\n                    offsetX = mx - ((this.outterCircle.x + this.offset.x) + (this.radius * Math.cos(angle)))\r\n                    this.innerCircle.x = (mx - this.offset.x)- offsetX\r\n                }\r\n\r\n                if(my < this.outterCircle.y + this.offset.y){\r\n                    offsetY = ((this.outterCircle.y + this.offset.y) - (this.radius * Math.sign(angle) *Math.sin(angle))) - my\r\n                    this.innerCircle.y = (my - this.offset.y) + offsetY\r\n                }else{\r\n                    offsetY = my - ((this.outterCircle.y + this.offset.y) + (this.radius * Math.sign(angle) * Math.sin(angle)))\r\n                    this.innerCircle.y = (my - this.offset.y) - offsetY\r\n                }\r\n\r\n            }\r\n            /* Compute the values of movement for characters */\r\n            this.computeMovement(mx - (this.outterCircle.x + this.offset.x), (this.outterCircle.y + this.offset.y) - my, angle)\r\n\r\n\r\n            /* Redraw canvas => You might light to add this call to your original Render method */\r\n            this.drawJoystick() \r\n        }\r\n    }\r\n\r\n    handleReleased = (e) => {\r\n\r\n        /* When released click then return to original position */\r\n        this.dragging = false\r\n        this.innerCircle.x = this.position.x\r\n        this.innerCircle.y = this.position.y\r\n        this.movement = {x: 0, y: 0}\r\n        this.angleInDegrees = 0\r\n        this.drawJoystick()\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport JoyStick from './JoyStick'\r\n\r\nclass Canvas extends Component{\r\n    state = {\r\n        handleChange: this.props.onChange,\r\n        canvasName: this.props.name\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const canvas = document.getElementById(this.state.canvasName)\r\n\r\n        canvas.width = canvas.getBoundingClientRect().width\r\n        canvas.height = canvas.getBoundingClientRect().height\r\n\r\n        console.log(canvas.getBoundingClientRect());\r\n\r\n        let position ={\r\n            x: canvas.width/2,\r\n            y: canvas.height/2\r\n        }\r\n\r\n        this.setState({\r\n            joystick: new JoyStick(canvas, position, 80, this.state.handleChange)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <canvas id={this.state.canvasName}></canvas>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas","import React from 'react'\r\nimport './Styles/UnderlinedTitle.css'\r\n\r\nconst UnderlinedTitle = ({text}) => (\r\n    <div className=\"dis-flex\">\r\n        <div className=\"title\">\r\n            <h2>{text}</h2>\r\n        </div>\r\n    </div>\r\n)\r\nexport default UnderlinedTitle","import React from 'react'\r\nimport Canvas from './Canvas'\r\nimport './Styles/MainSite.css'\r\nimport UnderlinedTitle from './UnderlinedTitle'\r\n\r\nconst MainSite = () => {\r\n\r\n    return (\r\n        <main className=\"container main-site\" id=\"start\">\r\n            <UnderlinedTitle text=\"Start\" />\r\n            <div className=\"clearfix\">\r\n                <div className=\"canvas-div\">\r\n                    <Canvas name=\"mainsite\"/>\r\n                </div>\r\n                <div className=\"start-information\">\r\n                    <p>Implement a draggable joystick easily on your own videogames!. Written in VanillaJS and easy to customize for your own designs. Have a look at the code and implement it in two easy steps.</p>\r\n                </div> \r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MainSite","import React from 'react'\r\nimport './Styles/Console.css'\r\n\r\nconst Console = () => {\r\n    return (\r\n        <div className=\"console-index\">\r\n            <div className=\"console index-top-console\">\r\n                <div className=\"top-console\">\r\n                    <div className=\"buttons-console\" id=\"red\"></div>\r\n                    <div className=\"buttons-console\" id=\"yellow\"></div>\r\n                    <div className=\"buttons-console\" id=\"green\"></div>\r\n                </div>\r\n                <div className=\"index-console-text\">\r\n                    <p className=\"\">&emsp; <span className=\"console-import\">import</span>  <span className=\"console-class\">Joystick</span> <span className=\"console-import\">from</span> <span className=\"console-string\">'./Joystick.js'</span></p>\r\n                    <p className=\"console-comment\">&emsp;//Position on Canvas - Sample: center</p>\r\n                    <p className=\"js-statement\">&emsp; <span className=\"console-keyword\">let</span> <span className=\"console-variable\">position</span> = &#123; <span className=\"console-variable\">x</span>: <span className=\"console-variable\">width</span>/2 , <span className=\"console-variable\">y</span>: <span className=\"console-variable\">height</span>/2 &#125;</p>\r\n                    <p className=\"js-statement\">&emsp; <span className=\"console-keyword\">let</span> <span className=\"console-variable\">sample</span> = <span className=\"console-keyword\">new</span> <span className=\"console-class\">Joystick </span>(<span className=\"console-variable\">canvas</span>, <span className=\"console-variable\">position</span>, <span className=\"console-variable\">Radius</span>)</p>\r\n                </div>  \r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Console","import React from 'react'\r\nimport UnderlinedTitle from './UnderlinedTitle'\r\nimport Console from './Console'\r\nimport './Styles/SetUpSite.css'\r\n\r\nconst SetUpSite = () => {\r\n    return (\r\n        <section className=\"setup-site container\" id=\"setup\">\r\n            <UnderlinedTitle text=\"SetUp and Use\" />\r\n            <p className=\"download-latest-release\">Get the latest release on <a className=\"links-source-code\" target=\"_blank\" href=\"https://github.com/Jorgelmh/TouchJoystick\">Github</a></p>\r\n            <Console />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SetUpSite","import React, { useState } from 'react'\r\nimport UnderlinedTitle from './UnderlinedTitle'\r\nimport Canvas from './Canvas'\r\nimport './Styles/Demonstration.css'\r\n\r\nconst Demonstration = () => {\r\n\r\n    const [position, setPosition] = useState({x: 0, y: 0})\r\n    const [angle, setAngle] = useState(0)\r\n\r\n    const handleChange = (data) => {\r\n        setPosition(data.movement)\r\n        setAngle(data.angle)\r\n    }\r\n\r\n    return(\r\n        <section id=\"examples\" className=\"site-demonstration container\">\r\n            <UnderlinedTitle text=\"Showing data\" />\r\n            <div className=\"canvas-and-data clearfix\">\r\n                <div className=\"demonstration-joystick-info\">\r\n                    <p className=\"documentation-paragraph\"><span className=\"getPos-span\">getPosition()</span> - Assuming it's applied on a video game where Y axis is inverted (general rule), \r\n                    returns how much has to be added on X and Y in a scale -1 to 1, in order to move the character. Also returns the angle of the inner circle in degrees</p>\r\n                    <div className=\"demonstration-data\">\r\n                        <p><span>X: </span>{position.x}</p>\r\n                        <p><span>Y: </span>{position.y}</p>\r\n                        <p><span>Angle: </span>{angle}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"demosntration-canvas-div\">\r\n                    <Canvas name=\"demonstration\" onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Demonstration","import React from 'react'\r\nimport './Styles/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"site-footer\">\r\n            <p>Made with <span className=\"heart\">❤</span> by Jorge</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {Fragment} from 'react'\r\nimport Header from '../Components/Header'\r\nimport MainSite from '../Components/MainSite'\r\nimport SetUpSite from '../Components/SetUpSite'\r\nimport Demonstration from '../Components/Demonstration'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <Fragment>\r\n            <Header />\r\n            <MainSite />\r\n            <SetUpSite />\r\n            <Demonstration />\r\n            <Footer />\r\n        </Fragment>\r\n    )\r\n}\r\n/* \r\n    TODO: add new components\r\n    \r\n    <SetupSite />\r\n    <Footer />\r\n\r\n*/\r\n\r\nexport default Landing","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Landing from './Pages/Landing'\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route  exact path=\"/\" component={Landing} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}